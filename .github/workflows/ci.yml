# .github/workflows/ci-cd.yml
name: CI / CD

on:
  pull_request:
  push:
    branches: [main]
    tags: ["v*.*.*"]
  workflow_dispatch:

jobs:
# --------------------------- LINT + TEST ---------------------------
  quality:
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }

      - name: Install deps (dev extra)
        run: |
          python -m pip install -U pip
          python -m pip install ".[dev]"

      # - name: Ruff – style / lint
      #   run: ruff check .

      - name: mypy – static typing
        run: mypy pix_client

      - name: Pytest + coverage
        run: pytest --cov=pix_client --cov-report=xml

      - name: Upload coverage (artefact opcional)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

# --------------------------- BUILD DIST ---------------------------
  build:
    needs: quality
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }

      - name: Build wheel + sdist
        run: |
          python -m pip install -U pip build twine
          python -m build
          twine check dist/*

      - name: Upload dist artefacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

# --------------------------- PUBLISH – TestPyPI ---------------------------
  release-testpypi:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/download-artifact@v4
        with: { name: dist }

      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }

      - name: Upload to TestPyPI
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          python -m pip install -U pip twine
          twine upload --repository testpypi dist/*

# --------------------------- PUBLISH – PyPI ---------------------------
  release-pypi:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: release-testpypi
    runs-on: ubuntu-latest
    environment: production
    permissions: read-all
    steps:
      - uses: actions/download-artifact@v4
        with: { name: dist }

      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }

      # - name: Upload to PyPI
      #   env:
      #     TWINE_USERNAME: "__token__"
      #     TWINE_PASSWORD:
      #   run: |
      #     python -m pip install -U pip twine
      #     twine upload dist/*

# --------------------------- GITHUB RELEASE ---------------------------
  github-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write            # necessário para criar release
    steps:
      - uses: actions/download-artifact@v4
        with: { name: dist }

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "pix_client ${{ github.ref_name }}"
          draft: false
          prerelease: false
          files: dist/*
